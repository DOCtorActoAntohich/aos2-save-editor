name: Tag and Release

on:
  workflow_dispatch:
    inputs:
      level:
        description: "Cargo-Release bump option"
        required: true
        default: "minor"
        type: choice
        options:
          - patch
          - minor
          - major

env:
  BINARY_NAME: aos2-save-editor

jobs:
  bump-version:
    name: Bump Version
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.85.0

      - run: cargo install cargo-release
      - id: release
        run: |
          cargo release ${{ inputs.level }} --no-publish --no-push --no-confirm --no-verify --execute
          TAG=$(git describe --tags --abbrev=0)
          echo "tag=${TAG}" >> $GITHUB_OUTPUT

      - run: |
          git push
          git push --tags

  build-windows:
    needs:
      - bump-version
    runs-on: windows-latest

    env:
      TARGET: x86_64-pc-windows-msvc

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.85.0
          target: ${{ env.TARGET }}
      - run: cargo build --release --target ${{ env.TARGET }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BINARY_NAME }}-windows
          path: target/${{ env.TARGET }}/release/${{ env.BINARY_NAME }}.exe

  build-linux:
    needs:
      - bump-version
    runs-on: ubuntu-latest

    env:
      TARGET: x86_64-unknown-linux-musl

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.85.0
          target: ${{ env.TARGET }}
      - run: cargo build --release --target ${{ env.TARGET }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BINARY_NAME }}-linux
          path: target/${{ env.TARGET }}/release/${{ env.BINARY_NAME }}

  release-all:
    needs:
      - build-windows
      - build-linux
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: ${{ env.BINARY_NAME }}-windows
          path: ./release/${{ env.BINARY_NAME }}-windows.exe
      - uses: actions/download-artifact@v4
        with:
          name: ${{ env.BINARY_NAME }}-linux
          path: ./release/${{ env.BINARY_NAME }}-linux

      - uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ steps.bump-version.outputs.tag }}
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
